【1】git基本命令
	git config --global user.name "xxx"                       # 配置用户名
	git config --global user.email "xxx@xxx.com"              # 配置邮件
	git config --global color.ui true                         # git status等命令自动着色
	git config --global color.status auto
	git config --global color.diff auto
	git config --global color.branch auto
	git config --global color.interactive auto

	git config --list                       #查看配置信息

	git init				#初始化仓库
	git add 文件名				#将更改过的文件放至暂存区（index）
	git commit -m "描述信息"		#提交
	git status 				#查看当前版本状态（是否修改）
	git log 				#显示提交日志
	git log --pretty=oneline                #单行显示，简洁版
	git rm XXX 				#删除index中的文件
	git diff 				#显示所有未添加至index的变更
	git diff --cached                       # 显示所有已添加index但还未commit的变更
	git diff HEAD^                          # 比较与上一个版本的差异
	git diff origin/master..master          # 比较远程分支master上有本地分支master上没有的
	git reset --hard （commit值）	 	#将当前版本重置为commit号对应的版本
	git reset --hard HEAD                   #HEAD为当前版本  HEAD^为上一个版本 HEAD^^为上上个，依次类推，HEAD~100为上100个版本
	git mv README README2                   # 重命名文件README为README2	

	git branch                              # 显示本地分支
	git branch develop			#创建develop分支
	git branch -d develop			#删除development分支
	
	git checkout name                       #切换分支
	git checkout -b name                    #创建并切换分支

	git checkout master			#切换到master分支上
	git checkout -- filename
			将暂存区（git add）的版本替换工作区的版本 -- 用于修改错了想还原，或者删除错了文件想还原

	git merge name                          #合并分支到master
	git merge origin/master			# 合并远程master分支至当前分支
	git push origin master                  # 将当前分支push到远程master分支	
	git push --tags				# 把所有tag推送到远程仓库
	git pull origin master                  # 获取远程分支master并merge到当前分支


【2】git三个工作区和文件的四种状态
	工作目录（workspace）、暂存区（index）、本地仓库（repo）
	未跟踪（untracked）、已暂存(staged)、已修改(modified)、已提交(committed)

	1）当在工作目录中新加入一个文件时，它处于未跟踪状态，这表示其没有纳入Git的版本控制。
	2）通过 git add 命令可以将其加入跟踪，并同时放入暂存区。
	3）一个已经被跟踪的文件，如果没有做过新的修改，就是未修改状态。
	4）一旦对其做了改动，就变成了已修改状态。通过 git add 命令可以将已修改的文件放入暂存区。
	5)初次克隆某个仓库时，工作目录中所有文件都是已跟踪且未修改的状态。
	6)git commit 命令会将暂存区中的文件提交至HEAD所指向的分支。当被commit之后，暂存区的文件将回到未修改状态。


【3】git分支

	git branch 				查看
	git checkout				切换分支
	git branch -d develop			删除development分支
	git branch -m develop	iii		重命名

	git merge 分支名 			合并分支
	
	合并时冲突
	

【4】git远程服务器
	git.oschina.net

	1.注册激活
	2.添加公钥
	3.创建项目
	4.创建新的分支并修改文件
	5.推送分支和代码到远程仓库
	6.更新远程仓库的分支和代码到本地



git clone git@github.com:hanp-linux/gitskills.git

https://github.com/hanp-linux/gitskills.git



查看远程库信息，使用git remote -v；

本地新建的分支如果不推送到远程，对其他人就是不可见的；

从本地推送分支，使用git push origin branch-name，如果推送失败，先用git pull抓取远程的新提交；

在本地创建和远程分支对应的分支，使用git checkout -b branch-name origin/branch-name，本地和远程分支的名称最好一致；

建立本地分支和远程分支的关联，使用git branch --set-upstream branch-name origin/branch-name；

从远程抓取分支，使用git pull，如果有冲突，要先处理冲突。


http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000






